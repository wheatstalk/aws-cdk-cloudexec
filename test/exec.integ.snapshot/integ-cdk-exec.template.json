{
  "Resources": {
    "StateMachineRoleB840431D": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "states.",
                      {
                        "Ref": "AWS::Region"
                      },
                      ".amazonaws.com"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Tags": [
          {
            "Key": "integ",
            "Value": "sfn"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "integ-cdk-exec/StateMachine/Role/Resource"
      }
    },
    "StateMachine2E01A3A5": {
      "Type": "AWS::StepFunctions::StateMachine",
      "Properties": {
        "RoleArn": {
          "Fn::GetAtt": [
            "StateMachineRoleB840431D",
            "Arn"
          ]
        },
        "DefinitionString": "{\"StartAt\":\"Choice\",\"States\":{\"Choice\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.succeed\",\"IsPresent\":true,\"Next\":\"ChoiceSucceed\"}],\"Default\":\"ChoiceFail\"},\"ChoiceFail\":{\"Type\":\"Fail\"},\"ChoiceSucceed\":{\"Type\":\"Succeed\"}}}",
        "Tags": [
          {
            "Key": "integ",
            "Value": "sfn"
          }
        ]
      },
      "DependsOn": [
        "StateMachineRoleB840431D"
      ],
      "Metadata": {
        "aws:cdk:path": "integ-cdk-exec/StateMachine/Resource",
        "integ": "sfn"
      }
    },
    "SecretA720EF05": {
      "Type": "AWS::SecretsManager::Secret",
      "Properties": {
        "GenerateSecretString": {}
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "integ-cdk-exec/Secret/Resource"
      }
    },
    "FunctionServiceRole675BB04A": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "integ",
            "Value": "lambda"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "integ-cdk-exec/Function/ServiceRole/Resource"
      }
    },
    "FunctionServiceRoleDefaultPolicy2F49994A": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret"
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "SecretA720EF05"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "FunctionServiceRoleDefaultPolicy2F49994A",
        "Roles": [
          {
            "Ref": "FunctionServiceRole675BB04A"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "integ-cdk-exec/Function/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "Function76856677": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "\ndef handler(event, context):\n  if \"succeed\" in event:\n    return {\"succeed\": True, \"message\": \"Hello from Lambda\"}\n\n  raise Exception('Error from lambda')\n"
        },
        "Role": {
          "Fn::GetAtt": [
            "FunctionServiceRole675BB04A",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "FOO": "bar",
            "SECRET_ARN": {
              "Ref": "SecretA720EF05"
            }
          }
        },
        "Handler": "index.handler",
        "Runtime": "python3.9",
        "Tags": [
          {
            "Key": "integ",
            "Value": "lambda"
          }
        ]
      },
      "DependsOn": [
        "FunctionServiceRoleDefaultPolicy2F49994A",
        "FunctionServiceRole675BB04A"
      ],
      "Metadata": {
        "aws:cdk:path": "integ-cdk-exec/Function/Resource",
        "integ": "lambda"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/01OQQ7CMAx7C/csMMSF8yRuSAgegEIaINC1aO1AqOrf2TqQONmOI9tLXOBiRq9QsblXVk+YDpH4DsPpmEKUx7l3HNW7gKm5emWBQ88sYmBDamH4jrIlvqoTaM7uX2dQajHtvS1WwZ23yu9RTixDEO4khpYcXaQb+osuWYVlsNSeDGHafKeM3o/nXKIl+L7jUtN4Z7RY4LwRvIX5s15hvcZ6dguqVde7qK3gfsIPE2KrkAMBAAA="
      },
      "Metadata": {
        "aws:cdk:path": "integ-cdk-exec/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}